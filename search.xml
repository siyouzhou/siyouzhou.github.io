<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>C++</title>
      <link href="/2023/09/25/C/"/>
      <url>/2023/09/25/C/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>离散数学</title>
      <link href="/2023/09/25/%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/"/>
      <url>/2023/09/25/%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/</url>
      
        <content type="html"><![CDATA[<p>注：在学习之前一定要多练，由于考试不会考得很广，所以本文章只写重点。</p><p>┐（非）  ∨（析取） ∧（合取） -&gt;(条件)    &lt;–&gt;(双条件)    ⇔（等价）</p><h2 id="基本公式："><a href="#基本公式：" class="headerlink" title="基本公式："></a>基本公式：</h2><p>对合律：┐┐p⇔p</p><p>幂等律：p∨p⇔p  ;   p∧p⇔p</p><p>交换律：P∨Q⇔Q∨P   ;    P∧Q⇔Q∧P</p><p>结合律：(P∨Q)∨R⇔P∨(Q∨R)    ;     (P∧Q)∧R⇔P∧(Q∧R)</p><p>分配律：(P∨Q)∨R⇔（P∨R）∨（Q∨R）  ;   (P∧Q)∧R⇔（P∧R）∧（Q∨R）</p><p>德.摩根律：┐（P∨Q)⇔ ┐P∧ ┐Q    ；  ┐（P∧Q)⇔ ┐P∨ ┐Q</p><p>蕴含式：A-&gt;B⇔┐P∨Q</p><p>否定：┐┐P⇔P</p><p>以上的结合律，分配律，交换律和小学的加法结合律，分配律，交换律相差不大。</p><h2 id="哈斯图"><a href="#哈斯图" class="headerlink" title="哈斯图"></a>哈斯图</h2><p>方法：哈斯图的意义是一种关系（比如被整除）的链接方式，通常给元素量很少，从下往上一个个链接就可以了。</p><p>例一：画出A{1，2，3，9，18}上的整除关系哈斯图。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>软件工程</title>
      <link href="/2023/09/25/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/"/>
      <url>/2023/09/25/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>数据库系统原理</title>
      <link href="/2023/06/07/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E5%8E%9F%E7%90%86/"/>
      <url>/2023/06/07/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E5%8E%9F%E7%90%86/</url>
      
        <content type="html"><![CDATA[<p><img src="/images/1.jpeg"><br>数据：描述事物的符号记录。<br>数据库：永久存储,有组织，可共享三个特点。<br>数据库管理系统：应用于程序和系统之间。</p><p>（1）数据定义：提供数据定义语言(DDL)定义表，视图，存储过程，触发器等。<br>（2）数据操纵：提供数据操纵语言（DML），能操纵数据库中的基本数据，查询，插入，删除，修改。<br>（3）数据库的运行管理：保证数据库的安全性，完整性，多用户对数据使用故障后的恢复。<br>（4）数据库的建立和维护：创建数据库，对数据库的空间维护，备份与恢复，重组和性能监听，分析等。<br>（5）数据库组织存储和管理：索引查找，顺序查找等。<br>（6）其它功能：网络通信功能，数据传输，相互访问。</p><h2 id="数据库管理技术发展："><a href="#数据库管理技术发展：" class="headerlink" title="数据库管理技术发展："></a>数据库管理技术发展：</h2><h3 id="1-人工阶段：20世纪50年代中期"><a href="#1-人工阶段：20世纪50年代中期" class="headerlink" title="1.人工阶段：20世纪50年代中期"></a>1.人工阶段：20世纪50年代中期</h3><p>  特点：<br>数据保存<br>应用程序管理数据<br>数据面向应用<br>数据结构化：记录内无结构，整体无结构</p><h3 id="2-文件系统阶段：20世纪50年代后期到20世纪60年代中期"><a href="#2-文件系统阶段：20世纪50年代后期到20世纪60年代中期" class="headerlink" title="2.文件系统阶段：20世纪50年代后期到20世纪60年代中期"></a>2.文件系统阶段：20世纪50年代后期到20世纪60年代中期</h3><p>  特点：<br>数据的管理者：文件系统，数据可长期保存<br>数据面向对象：某一应用程序<br>数据的共享度：共享差，沉余大<br>数据结构化：记录内有结构整体无结构<br>数据独立性：独立性差，程序自己控制</p><h3 id="3-数据库系统阶段：20世纪60年代后期"><a href="#3-数据库系统阶段：20世纪60年代后期" class="headerlink" title="3.数据库系统阶段：20世纪60年代后期"></a>3.数据库系统阶段：20世纪60年代后期</h3><p>  特点：<br>数据集成，数据共享度高，数据沉余度小，数据一致性，数据独立性高，实施统一管理与控制，介绍应用程序的开发与维护的工作量</p><h2 id="数据库的三级模式："><a href="#数据库的三级模式：" class="headerlink" title="数据库的三级模式："></a>数据库的三级模式：</h2><p>1.模式：概念模式逻辑模式<br>2.外模式：子模式或用户模式<br>3.内模式：存储模式，物理结构和存储模式的描述<br>4.三级模式结构的两层映像与数据独立<br>   （1）外模式&#x2F;模式映像（逻辑独立）<br>   （2）模式&#x2F;内模式映像（物理独立性）</p><h2 id="数据库的运行与应用结构："><a href="#数据库的运行与应用结构：" class="headerlink" title="数据库的运行与应用结构："></a>数据库的运行与应用结构：</h2><p>1.客户&#x2F;服务器    简称C&#x2F;S模式<br>    例如：QQ，桌面客户端游戏<br>2.浏览器&#x2F;服务器  简称B&#x2F;S，模式<br>    例如：网站，在线Web游戏</p><h3 id="数据模型组成要素："><a href="#数据模型组成要素：" class="headerlink" title="数据模型组成要素："></a>数据模型组成要素：</h3><p>1.数据结构：静态的，数据类型，内容属性及对象之间的联系。<br>2.数据操作：动态的，执行操作集合，包括操作及有关的操作规则。<br>3.数据约束：语法和语义关联，保证正确性，相容性和有效性。</p><p>数据模型分类：现实世界————&gt;概念模型—————&gt;具有DBMS支持的逻辑模型（机器世界）</p><p>一.概念模型：<br>实体，属性，码或键，域，实体型，实体集，联系（1：1   1：N   M:N）</p><p>二.概念模型表示方法：E-R图<br>实体（矩形） 联系（菱形）  属性（圆角）</p><p>三.逻辑层数据模型：<br>1.层次模型<br>2.网状模型<br>3*关系模型  （目前最常用的）<br>4.面向对象模型</p><p>4.物理层数据模型</p><p>一，关系数据结构：对于用户来说关系模型就是二维表</p><p>关系数据的基本语数：<br>1，表：也称关系，由表名，行，列组成<br>2，关系：基本关系，查询表和视图表<br>3，列：也称字段或属性<br>4，属性：同列<br>5.行：也称元组或记录<br>6.元组：同行<br>7.分量：元组中一个属性值称为分量</p><h2 id="关系完整性约束："><a href="#关系完整性约束：" class="headerlink" title="关系完整性约束："></a>关系完整性约束：</h2><p>1.实体完整性约束：<br>              主键（主码）不能为空</p><p>2.参照完整性约束：<br>              实体之间存在联系</p><p>3.用户自定义完整约束：<br>              反映某一具体应用数据应满足要求</p><h2 id="关系模型完整性约束的体检："><a href="#关系模型完整性约束的体检：" class="headerlink" title="关系模型完整性约束的体检："></a>关系模型完整性约束的体检：</h2><p>.执行插入操作<br>.执行删除操作<br>.执行更新操作</p><h2 id="可能存在地异常问题："><a href="#可能存在地异常问题：" class="headerlink" title="可能存在地异常问题："></a>可能存在地异常问题：</h2><p>1.数据沉余<br>2.更新异常<br>3.插入异常<br>4.删除异常</p><h2 id="数据库生命周期："><a href="#数据库生命周期：" class="headerlink" title="数据库生命周期："></a>数据库生命周期：</h2><p>数据库生命周期分为两大阶段：<br>1.数据库分析与设计阶段：<br>                     需求分析，概念设计，逻辑设计和物理设计<br>2.数据库实现与操作阶段：<br>                     数据库的实现，操作与监督，修改与调整</p><h2 id="数据库的设计目标："><a href="#数据库的设计目标：" class="headerlink" title="数据库的设计目标："></a>数据库的设计目标：</h2><p>1.满足应用功能需求<br>2.良好的数据库性能</p><h2 id="数据库的设计内容："><a href="#数据库的设计内容：" class="headerlink" title="数据库的设计内容："></a>数据库的设计内容：</h2><p>1.数据库结构设计：包括数据库概念结构设计，逻辑结构和物理结构设计。<br>2.数据库行为设计：增删改查……</p><h2 id="数据库设计方法："><a href="#数据库设计方法：" class="headerlink" title="数据库设计方法："></a>数据库设计方法：</h2><p>1.直观法<br>2.规范设计法<br>  （1）新奥尔良设计方法<br>  （2）基于E-R型设计方法<br>   (3)基于第三范式的设计方法<br>3.计算机辅助设计法</p><h2 id="收集和分析数据："><a href="#收集和分析数据：" class="headerlink" title="收集和分析数据："></a>收集和分析数据：</h2><p>（1）静态结构：数据分类和数据元素表进行分类<br>（2）动态结构：任务分类表和操作特征表<br>（3）数据约束：指使用数据的特殊要求<br>              .数据的安全保密性<br>              .数据的完整性<br>              .响应时间<br>              .数据恢复</p><h2 id="编写需求分析报告："><a href="#编写需求分析报告：" class="headerlink" title="编写需求分析报告："></a>编写需求分析报告：</h2><p>1.数据的应用功能目标<br>2.表明不同用户的视图范围<br>3.应用过程需求说明（数据流图，任务分类表，数据操作特征表，操作过程说明书）<br>4.数据字典：包括数据分类表，数据元素和各类原始资料<br>5.数据量：静态数据量动态数据量<br>6.数据约束</p><h2 id="物理设计方法："><a href="#物理设计方法：" class="headerlink" title="物理设计方法："></a>物理设计方法：</h2><p>1.建立索引<br>2.建立聚集</p><h2 id="存储函数与存储过程的区别："><a href="#存储函数与存储过程的区别：" class="headerlink" title="存储函数与存储过程的区别："></a>存储函数与存储过程的区别：</h2><p>.存储过程不能拥有输出参数，而存储过程可以拥有输出参数（函数必须拥有返回值或者表对象）<br>.使用CALL语句调用存储过程使用函数名调用函数<br>.存储函数必须包含RETURN语句，而存储过程不能包含</p><p>事务的ACID特征<br>1.原子性：事务是不可分割的工作单位<br>2.一致性：事务必须满足数据库地完整性约束，完成后由一个一致性转变成另外一个一致性状态<br>3.隔离性：一个事务的执行不能被其它事务干扰<br>4.持续性：一个事务一旦提交，它对数据库中的数据改变应该是永久的</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
