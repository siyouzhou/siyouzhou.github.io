<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>数据库系统原理</title>
      <link href="/2023/06/07/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E5%8E%9F%E7%90%86/"/>
      <url>/2023/06/07/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E5%8E%9F%E7%90%86/</url>
      
        <content type="html"><![CDATA[<p><img src="/images/1.jpeg" class="lazyload placeholder" data-srcset="/images/1.jpeg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"><br>数据库模型：层次模型，网状模型，关系模型</p><p>数据库发展阶段：<br>层次数据库（Hierarchical Database）：层次数据库是20世纪60年代开始出现的，层次数据库是最早的数据库之一。</p><p>网状数据库（Network Database）：网状数据库是20世纪70年代中期到80年代初期的技术，网状数据库是在层次数据库的基础上发展而来的一种数据库，它的数据模型是网状结构。</p><p>关系数据库（Relational Database）：关系数据库是20世纪80年代中期开始出现的，关系数据库是目前应用最广泛的一种数据库，它的数据模型是基于关系模型的。在关系数据库中。</p><p>数据库模型三要素：数据结构，数据操作，数据完整性约束</p><p>数据的三级模式与两层映像:<br>内模式:对应于物理层数据抽象，它是数据的物理结构和存储方式的描述，是数据在数据库内部的表示方式。<br>模式:对应于逻辑层数据抽象，它是数据库中全体数据结构和特征描述，是所有用户的公共数据视图。<br>外模式:对应于视图层数据抽象，它是用户能够看见和使用的局部数据的逻辑结构和特征描述。</p><p>两层映像：外模式&#x2F;模式映像 模式&#x2F;内模式映像<br>          实现了抽象层次的数据之间联系和转换，正是这两层映像保证了数据在数据库中具有较高的数据独立性和物理独立型</p><p>数据库组成：数据库，数据库管理系统，应用程序，数据库管理员，最终用户</p><p>模型与关系代数：<br>基本关系代数运算：并，差，笛卡尔积，选择，投影<br>关系模型的完整性约束：实体完整性约束，参照完整性约束，用户自定义</p><p>SQL语句：<br>常用语句：SELECT（查询） INSERT(插入数据)   DELETE(删除表中的数据)   UPDATE(更新)   DROP(删除表和数据库) DELETE(删除数据) PRIMARY KEY(关键字&#x2F;主码) WHERE(条件)*（所有的）   *注意：如果大写记不住可以记住小写最好是自己上手操作学会用法</p><p>SQL使用流程：    *为了方便看得懂就一步一步来<br>查看数据库：<br>SHOW DATABASES;</p><p>创建数据库：<br>CREATE DATABASE 数据库名称;     *（不要疑惑为什么上面是DATABASES 下面是DATABASE 因为上面查的数据库不可能只有一个数据库）</p><p>使用数据库：<br>USE 数据库名字;</p><p>创建表：<br>CREATE TABLE 表名<br>(列名  数据类型() PRIMARY KEY,<br> 列名   数据类型(),<br>  列名   数据类型());</p><p>插入数据：<br>INSERT INTO 表名 (列名1,列名2,列名3)<br>VALUES(‘插入的数据名字1’,’插入的数据名字2’,’插入的数据名字3’);</p><p>查询表：<br>SELECT *<br>FROM 表名;</p><p>更新数据：<br>UPDATE 表名<br>SET 源数据&#x3D;’更改的数据’<br>WHERE 列名&#x3D;’源数据’;</p><p>删除数据库：<br>DROP DATABASE 数据库名;<br>删除表：<br>DROP TABLE 表名;</p><p>删除数据：<br>DELETE FROM 表名<br>WHERE 列名&#x3D;’数据’;</p><p>后面还有很多语句一般考不到就不过多说。</p><p>数据库建模：概念建模，逻辑建模，物理建模</p><p>数据库理论与求精：<br>  一个好的数据库应该尽可能减少数据沉余（就是尽可能减少数据重复），插入异常，删除异常，更新异常，考虑分解模式后保持链接的依懒性。</p><p>  范式：范式是对数据库的基本要求，以避免数据库出现重复等数据<br>        第一范式：每个属性对应的域值都是不可分的。<br>        第二范式：在第一范式的基础上，消除非主属性对候选码的传递依赖。<br>        第三范式：在第二范式的基础上，消除非主属性对候选码的部分依赖和传递依赖   *冷知识：一般数据库满足到该范式即可<br>        BCNF（巴斯-科德范式）：在第三范式基础上消除主属性对候选码的部分依赖和传递依赖。</p><p>未完</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
